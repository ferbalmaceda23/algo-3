Object subclass: #AlgoVid	instanceVariableNames: 'personas burbujas colegios'	classVariableNames: ''	package: 'TP1'!!AlgoVid methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/13/2021 21:54'!initialize	personas := OrderedCollection new.	burbujas := OrderedCollection new.	colegios := OrderedCollection new.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:57'!diagnosticoDe: unNombre	^(self buscarPersona: unNombre) diagnostico.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 18:26'!nuevaBurbuja: unNombre	(burbujas anySatisfy: [ :burbuja | burbuja nombre = unNombre])		ifTrue: [ MismoNombreBurbujaError signal ].	burbujas add: (Burbuja conNombre: unNombre).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 18:28'!nuevaPersona: unNombre	(personas anySatisfy: [ :persona | persona nombre = unNombre ])		ifTrue: [ MismoNombrePersonaError signal ].	personas add: (Persona conNombre: unNombre).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 20:38'!agregarA: unNombre aLaBurbuja: unaBurbuja	(burbujas isEmpty) ifTrue: [ NoHayBurbujasError signal ].	(self buscarBurbuja: unaBurbuja) agregarA: (self buscarPersona: unNombre).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 20:37'!agregarSintoma: unSintoma a: unNombre	(personas isEmpty) ifTrue: [ NoHayPersonasError signal ].	(self buscarPersona: unNombre) agregarSintoma: unSintoma.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 18:29'!nuevoColegio: unNombre	(colegios anySatisfy: [ :colegio | colegio nombre = unNombre ])		ifTrue: [ MismoNombreColegioError signal ].	colegios add: (Colegio conNombre: unNombre).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:56'!burbujaPinchada: unaBurbuja	^(self buscarBurbuja: unaBurbuja) estaPinchada.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:56'!clasesPresencialesEn: unColegio	^ (self buscarColegio: unColegio) hayClases.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:58'!puedeCircular: unNombre	^(self buscarPersona: unNombre) puedeCircular.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:57'!esPersonaDeRiesgo: unNombre	(self buscarPersona: unNombre) esPersonaDeRiesgo.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:23'!buscarColegio: unColegio	^(colegios detect: [ :colegio | colegio nombre = unColegio ]		ifNone: [ColegioNoEncontradoError signal]).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 20:35'!agregarA: unaBurbuja alColegio: unColegio	(colegios isEmpty) ifTrue: [ NoHayColegiosError signal ].	(self buscarColegio: unColegio) agregarBurbuja: (self buscarBurbuja: unaBurbuja).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 22:18'!contactoEstrechoEntre: unNombre y: otroNombre	(self buscarPersona: unNombre) contactoEstrechoCon: (self buscarPersona: otroNombre).	(self buscarPersona: otroNombre) contactoEstrechoCon: (self buscarPersona: unNombre).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:26'!estaVacunadx: unNombre	(self buscarPersona: unNombre) estaVacunadx.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:57'!esPersonalEsencial: unNombre	(self buscarPersona: unNombre) esEsencial.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:24'!buscarPersona: unNombre	^(personas detect: [ :persona | persona nombre = unNombre]		ifNone: [PersonaNoEncontradaError signal]).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:23'!buscarBurbuja: unaBurbuja	^(burbujas detect: [ :burbuja | burbuja nombre = unaBurbuja ]		ifNone: [ BurbujaNoEncontradaError signal ]).! !Object subclass: #Burbuja	instanceVariableNames: 'nombre personas estado'	classVariableNames: ''	package: 'TP1'!!Burbuja methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/13/2021 20:16'!establecerNombre: unNombre	nombre := unNombre.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 20:23'!agregarA: unaPersona	personas add: unaPersona.! !!Burbuja methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/19/2021 23:37'!estaPinchada	(personas isEmpty) ifTrue: [ NoHayPersonasError signal ].	estado := estado verificarEstadoBurbuja: personas.	^estado estaPinchada.! !!Burbuja methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/13/2021 20:16'!nombre	^nombre.! !!Burbuja methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/17/2021 20:31'!initialize	personas := OrderedCollection new.	estado := BurbujaNoPinchada new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Burbuja class	instanceVariableNames: ''!!Burbuja class methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/13/2021 20:18'!conNombre: unNombre	|burbuja|.	burbuja := Burbuja new.	burbuja establecerNombre: unNombre.	^burbuja.! !Error subclass: #BurbujaNoEncontradaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Colegio	instanceVariableNames: 'nombre burbujas'	classVariableNames: ''	package: 'TP1'!!Colegio methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/13/2021 21:59'!initialize	burbujas := OrderedCollection new.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/13/2021 21:55'!establecerNombre: unNombre	nombre := unNombre.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/13/2021 22:01'!agregarBurbuja: unaBurbuja	burbujas add: unaBurbuja.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:18'!hayClases	(burbujas isEmpty) ifTrue: [ NoHayBurbujasError signal ].	^(((burbujas count: [ :burbuja | burbuja estaPinchada ])/burbujas size) < 0.4).! !!Colegio methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/13/2021 21:54'!nombre	^nombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Colegio class	instanceVariableNames: ''!!Colegio class methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/13/2021 21:56'!conNombre: unNombre	|colegio|	colegio := Colegio new.	colegio establecerNombre: unNombre.	^colegio.! !Error subclass: #ColegioNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #CondicionPersona	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CondicionPersona methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:18'!puedeCircular	self subclassResponsibility.! !Object subclass: #Diagnostico	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Diagnostico methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/15/2021 16:47'!puedeCircular	self subclassResponsibility.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:54'!siguienteDiagnostico	self subclassResponsibility.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:53'!rediagnosticarSiTiene: unSintomaHabitual y: unaCantidadSintomas	self subclassResponsibility.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:56'!descripcion	self subclassResponsibility.! !Object subclass: #EstadoBurbuja	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!EstadoBurbuja methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 20:27'!estaPinchada	self subclassResponsibility.! !!EstadoBurbuja methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 20:43'!verificarEstadoBurbuja: unGrupoDePersonas	self subclassResponsibility.! !EstadoBurbuja subclass: #BurbujaNoPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!BurbujaNoPinchada methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:16'!verificarEstadoBurbuja: personas	(personas anySatisfy: [ :persona | persona tieneCovid ]) ifFalse: [ ^self].	self pincharBurbuja: personas.	^BurbujaPinchada new! !!BurbujaNoPinchada methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:16'!pincharBurbuja: personas	|personaInfectada|	personaInfectada := (personas detect: [ :persona | persona tieneCovid]).	personas do: [ :persona | (persona tieneCovid) ifFalse: [ persona contactoEstrechoCon: personaInfectada ] ].! !!BurbujaNoPinchada methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 20:28'!estaPinchada	^false.! !EstadoBurbuja subclass: #BurbujaPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!BurbujaPinchada methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 20:28'!estaPinchada	^true.! !!BurbujaPinchada methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/18/2021 16:17'!verificarEstadoBurbuja: personas	^self.! !Object subclass: #Medico	instanceVariableNames: 'sintomas diagnostico'	classVariableNames: ''	package: 'TP1'!!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 16:08'!pacienteTieneSintomasHabituales	^(sintomas anySatisfy: [:sintoma | sintoma esHabitual]).! !!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:29'!pacienteTieneCovid	^ (self diagnostico = 'Positivo')! !!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:31'!pacienteEsSospechosoOPositivo	^(#('Sospechoso' 'Positivo') anySatisfy: [ :unDiagnostico | self diagnostico = unDiagnostico ]).! !!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:32'!informarContactoEstrechoCon: unaPersona	(unaPersona esSospechosoOPositivo) ifTrue: [ diagnostico := Sospechoso new ].! !!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 18:30'!informarSintoma: unSintoma	(sintomas anySatisfy: [ :sintoma | sintoma nombre = unSintoma])		ifTrue: [ SintomaYaAgregadoError signal ].	sintomas add: (Sintoma conNombre: unSintoma).	self revisarDiagnostico.! !!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 18:10'!revisarDiagnostico	diagnostico := diagnostico rediagnosticarSiTiene: (self pacienteTieneSintomasHabituales) y: (sintomas size).! !!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 18:17'!diagnostico	^diagnostico descripcion.! !!Medico methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 18:02'!loDejaCircular	^(diagnostico puedeCircular).! !!Medico methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/15/2021 15:10'!initialize	sintomas := OrderedCollection new.	diagnostico := Negativo new.! !Error subclass: #MismoNombreBurbujaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #MismoNombreColegioError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #MismoNombrePersonaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Diagnostico subclass: #Negativo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Negativo methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/15/2021 02:04'!puedeCircular	^true.! !!Negativo methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:54'!siguienteDiagnostico	^Sospechoso new.! !!Negativo methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 00:31'!rediagnosticarSiTiene: unSintomaHabitual y: unaCantidadSintomas	(unaCantidadSintomas > 0) ifTrue: [ ^self siguienteDiagnostico ].! !!Negativo methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/16/2021 18:22'!descripcion	^'Negativo'.! !Error subclass: #NoHayBurbujasError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NoHayColegiosError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NoHayPersonasError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!CondicionPersona subclass: #NoPersonaDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoPersonaDeRiesgo methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:20'!puedeCircular	^true.! !CondicionPersona subclass: #NoVacunadx	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoVacunadx methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:20'!puedeCircular	^false.! !Object subclass: #Permiso	instanceVariableNames: 'condicionEsencial condicionDeRiesgo condicionVacunadx'	classVariableNames: ''	package: 'TP1'!!Permiso methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:23'!esEsencial	condicionEsencial  := PersonalEsencial new.! !!Permiso methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:25'!puedeCircular	^(condicionDeRiesgo puedeCircular & (condicionEsencial puedeCircular | condicionVacunadx puedeCircular)).! !!Permiso methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:24'!esPersonaDeRiesgo	condicionDeRiesgo := PersonaDeRiesgo new.! !!Permiso methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:25'!informarVacunacion	condicionVacunadx := Vacunadx new.! !!Permiso methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/17/2021 19:23'!initialize	condicionVacunadx := NoVacunadx new.	condicionEsencial := PersonalNoEsencial new.	condicionDeRiesgo := NoPersonaDeRiesgo new.! !Object subclass: #Persona	instanceVariableNames: 'nombre medico permiso'	classVariableNames: ''	package: 'TP1'!!Persona methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/15/2021 11:30'!initialize	medico := Medico new.	permiso := Permiso new.! !!Persona methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/15/2021 11:12'!puedeCircular	^((permiso puedeCircular) & (medico loDejaCircular)).! !!Persona methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/13/2021 14:14'!nombre	^nombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 20:25'!contactoEstrechoCon: unaPersona	medico informarContactoEstrechoCon: unaPersona.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/14/2021 23:59'!esPersonaDeRiesgo	permiso esPersonaDeRiesgo.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:26'!estaVacunadx	permiso informarVacunacion.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 16:30'!esSospechosoOPositivo	^(medico pacienteEsSospechosoOPositivo).! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/14/2021 23:59'!esEsencial	permiso esEsencial.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 01:56'!agregarSintoma: unSintoma	medico informarSintoma: unSintoma.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/13/2021 14:39'!establecerNombre: unNombre	nombre := unNombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 18:16'!diagnostico	^medico diagnostico.! !!Persona methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:29'!tieneCovid	^(medico pacienteTieneCovid).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: 'nombre puedeCircular'!!Persona class methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/13/2021 14:40'!conNombre: unNombre	| persona |	persona := Persona new.	persona establecerNombre: unNombre.	^persona.! !CondicionPersona subclass: #PersonaDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PersonaDeRiesgo methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:20'!puedeCircular	^false.! !Error subclass: #PersonaNoEncontradaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!CondicionPersona subclass: #PersonalEsencial	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PersonalEsencial methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:20'!puedeCircular	^true.! !CondicionPersona subclass: #PersonalNoEsencial	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PersonalNoEsencial methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:21'!puedeCircular	^false.! !Diagnostico subclass: #Positivo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Positivo methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/15/2021 02:01'!puedeCircular	^false.! !!Positivo methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:54'!siguienteDiagnostico	^self.! !!Positivo methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:54'!rediagnosticarSiTiene: unSintomaHabitual y: unaCantidadSintomas	^self siguienteDiagnostico.! !!Positivo methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:56'!descripcion	^'Positivo'! !Object subclass: #Sintoma	instanceVariableNames: 'nombre tipo'	classVariableNames: ''	package: 'TP1'!!Sintoma methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/17/2021 19:31'!establecerNombre: unNombre	nombre := unNombre.! !!Sintoma methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/19/2021 11:33'!establecerComoHabitual: unNombre	(#('Fiebre' 'Tos' 'Cansancio') anySatisfy: [ :unSintoma | unSintoma = unNombre ])		ifTrue: [ tipo := SintomaHabitual new ].! !!Sintoma methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/19/2021 11:32'!initialize	tipo := SintomaNoHabitual new.! !!Sintoma methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/14/2021 15:47'!nombre	^nombre.! !!Sintoma methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/19/2021 11:32'!esHabitual	^tipo esHabitual.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sintoma class	instanceVariableNames: ''!!Sintoma class methodsFor: 'initialization' stamp: 'FernandoBalmaceda 5/17/2021 19:33'!conNombre: unNombre	|sintoma|	sintoma := self new.	sintoma establecerNombre: unNombre.	sintoma establecerComoHabitual: sintoma nombre.	^sintoma.! !Error subclass: #SintomaYaAgregadoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Diagnostico subclass: #Sospechoso	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Sospechoso methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/14/2021 22:49'!puedeCircular	^false.! !!Sospechoso methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:54'!siguienteDiagnostico	^Positivo new.! !!Sospechoso methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/18/2021 23:37'!rediagnosticarSiTiene: unSintomaHabitual y: unaCantidadSintomas	((unaCantidadSintomas > 2 & unSintomaHabitual) | (unaCantidadSintomas > 3) )		ifTrue: [ ^self siguienteDiagnostico ].! !!Sospechoso methodsFor: 'as yet unclassified' stamp: 'FernandoBalmaceda 5/15/2021 17:56'!descripcion	^'Sospechoso'! !Object subclass: #TipoSintoma	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!TipoSintoma methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/19/2021 11:31'!esHabitual	self subclassResponsibility.! !TipoSintoma subclass: #SintomaHabitual	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SintomaHabitual methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/19/2021 11:31'!esHabitual	^true.! !TipoSintoma subclass: #SintomaNoHabitual	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SintomaNoHabitual methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/19/2021 11:32'!esHabitual	^false.! !CondicionPersona subclass: #Vacunadx	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Vacunadx methodsFor: 'accessing' stamp: 'FernandoBalmaceda 5/17/2021 19:27'!puedeCircular	^true.! !